@import "variables";
@import "functions";
@import "mixins";

/*
 * Physia css color system
 * {c|d|l}-{*}-{*}: background color لون الخلفية
 * {c|d|l}-{*}-t  : text color لون النص
 * {c|d|l}-{*}-b  : border color لون الحدود
 * Ex: <input class="c-p c-0-t l-0 d-15"/>
 */
/*
 * تدرج ألوان من الأبيض إلى الأسود، الهدف منها تخصيصي الوضع المضلم والوضع العادي
 * يمكن استعماله أيضا لتحديد تدرج معين
 * dark and light theme helpers
 * you can use " to select color black to white
 */
@for $dc from 0 to 21 {
    @if $--colors--active-bg {
        .c#{$dc} {
            @include _cl-background_color(var(--theme-colors-#{$dc}));
        }
    }

    @if $--colors--active-text {
        .c#{$dc}-t {
            @include _cl-text_color(var(--theme-colors-#{$dc}));
        }
    }

    @if $--colors--active-border {
        .c#{$dc}-b {
            @include _cl-border_color(var(--theme-colors-#{$dc}));
        }
    }

    @if $--colors--active-fill {
        .c#{$dc}-f {
            @include _cl-fill_color(var(--theme-colors-#{$dc}));
        }
    }
}

.--light {
    @for $dc from 0 to 21 {
        $color: hsl(0, 0%, $dc*5%);
        --theme-colors-#{$dc}: #{$color};
    }
}

.--dark {
    @for $dc from 0 to 21 {
        $color: hsl(0, 0%, $dc*5%);
        --theme-colors-#{$dc}: #{invert($color)};
    }
}


@for $dc from 0 to 21 {
    $color: hsl(0, 0%, $dc*5%);

    @if $--colors--active-bg {

        .--dark .d#{$dc},
        .--light .l#{$dc} {
            background-color: var(--theme-colors-#{$dc})
        }
    }

    @if $--colors--active-text {

        .--dark .d#{$dc}-t,
        .--light .l#{$dc}-t {
            color: var(--theme-colors-#{$dc})
        }
    }

    @if $--colors--active-border {

        .--dark .d#{$dc}-b,
        .--light .l#{$dc}-b {
            border-color: var(--theme-colors-#{$dc})
        }
    }

    @if $--colors--active-border {

        .--dark .d#{$dc}-f,
        .--light .l#{$dc}-f {
            fill: var(--theme-colors-#{$dc})
        }
    }

    // dynamic theme colores
    @include _cl-init_color_full(c-#{$dc}, var(--theme-colors-#{$dc}));

}

@include _cl-color_palette("p", $--colors--primaryColor, "5");
@include _cl-color_palette("s", $--colors--secondaryColor, "3");
@include _cl-colors();

.--env {

    @each $name,
    $color in $cl--colors {
        --c-#{$name}: #{$color};
    }
    // ألوان تحديد الأوضاع، خطأ، تحذير، تنبيه...إلخ
    // static colors: wrong, error,...
    @each $name,
    $color in $cl--static-colors {
        --c-#{$name}: #{$color};
    }
}

@each $name,
$color in $cl--colors {
    @include _cl-init_color(#{$name}, var(--c-#{$name}));
}

@each $name,
$color in $cl--static-colors {
    @include _cl-init_color(#{$name}, var(--c-#{$name}));

    .c-#{$name}-f {
        @include _cl-fill_color(var(--c-#{$name}));
    }
}

//
::selection,
::-moz-selection {
    color: white;
    background-color: var(--c-s);
    caret-color: var(--c-c);
}