@mixin _cl-color_palette($clr, $name, $value) {
    $colors: Cl-getColor($name);

    .--env {

        @each $__clr,
        $hex in $colors {
            @if $__clr=="3"and $clr=="s" {
                --c-s: #{$hex};
            }

            @if $__clr=="5"and $clr=="p" {
                --c-p: #{$hex};
            }

        }
    }

    @each $__clr,
    $hex in $colors {
        @if $__clr=="3"and $clr=="s" {
            @include _cl-init_color("s", var(--c-s));
        }

        @if $__clr=="5"and $clr=="p" {
            @include _cl-init_color("p", var(--c-p));
        }

        // @include _cl-init_color($__clr, var(--c-p-#{$__clr}), "c-"+$clr)
    }
}

@mixin _cl-colors() {
    .--env {

        @each $_clr,
        $clrs in $cl--c-palette {

            @each $__clr,
            $hex in $clrs {
                @if $__clr=="5" {
                    --c-#{$_clr}: #{$hex};
                }
            }
        }
    }

    @each $_clr,
    $clrs in $cl--c-palette {

        @each $__clr,
        $hex in $clrs {
            @if $__clr=="5" {
                @include _cl-init_color($_clr, var(--c-#{$_clr}));
            }
        }
    }
}

@mixin _cl-init_color($name, $color, $prefix:"c") {
    @include _cl-init_color_full(#{$prefix}-#{$name}, $color);
}

@mixin _cl-init_color_full($name, $color) {
    @if $--colors--active-bg {
        .#{$name} {
            @include _($--colors--pseudo-defealt) {
                @include _cl-background_color($color);
            }
        }
    }

    @if $--colors--active-text {
        .#{$name}-t {
            @include _($--colors--pseudo-defealt) {
                @include _cl-text_color($color);
            }
        }
    }


    @if $--colors--active-border {
        .#{$name}-b {
            @include _($--colors--pseudo-defealt) {
                @include _cl-border_color($color);
            }
        }
    }
}

@mixin _cl-background_color($color) {
    background-color: $color !important
}

@mixin _cl-text_color($color) {
    color: $color !important
}

@mixin _cl-border_color($color) {
    border-color: $color !important
}

@mixin _cl-fill_color($color) {
    fill: $color !important
}